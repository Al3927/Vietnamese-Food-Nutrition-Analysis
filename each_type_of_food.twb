<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20204.21.0511.0936                               -->
<workbook source-build='2020.4.5 (20204.21.0511.0936)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <SavingAnalyticObjects />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Loại Parameter' datatype='string' name='[Loại Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;ĐỒ HỘP&quot;'>
        <calculation class='tableau' formula='&quot;ĐỒ HỘP&quot;' />
        <aliases>
          <alias key='&quot;ĐỒ NGỌT (ĐƯỜNG, BÁNH, MỨT, KẸO)&quot;' value='ĐỒ NGỌT' />
          <alias key='&quot;GIA VỊ, NƯỚC CHẤM&quot;' value='GIA VỊ' />
          <alias key='&quot;Hạt, quả giàu protein, chất béo và chế phẩm&quot;' value='HẠT' />
          <alias key='&quot;Khoai củ và các sản phẩm chế biến từ chúng&quot;' value='KHOAI CỦ' />
          <alias key='&quot;Ngũ cốc và sản phẩm chế biến từ chúng&quot;' value='NGŨ CỐC' />
          <alias key='&quot;SỮA VÀ SẢN PHẨM CHẾ BIẾN&quot;' value='SỮA' />
          <alias key='&quot;THỊT VÀ SẢN PHẨM CHẾ BIẾN&quot;' value='THỊT' />
          <alias key='&quot;THỦY SẢN VÀ SẢN PHẨM CHẾ BIẾN&quot;' value='THỦY SẢN' />
          <alias key='&quot;TRỨNG VÀ SẢN PHẨM CHẾ BIẾN&quot;' value='TRỨNG' />
        </aliases>
        <members>
          <member value='&quot;ĐỒ HỘP&quot;' />
          <member alias='ĐỒ NGỌT' value='&quot;ĐỒ NGỌT (ĐƯỜNG, BÁNH, MỨT, KẸO)&quot;' />
          <member alias='GIA VỊ' value='&quot;GIA VỊ, NƯỚC CHẤM&quot;' />
          <member alias='HẠT' value='&quot;Hạt, quả giàu protein, chất béo và chế phẩm&quot;' />
          <member alias='KHOAI CỦ' value='&quot;Khoai củ và các sản phẩm chế biến từ chúng&quot;' />
          <member alias='NGŨ CỐC' value='&quot;Ngũ cốc và sản phẩm chế biến từ chúng&quot;' />
          <member value='&quot;NƯỚC GIẢI KHÁT&quot;' />
          <member alias='SỮA' value='&quot;SỮA VÀ SẢN PHẨM CHẾ BIẾN&quot;' />
          <member alias='THỊT' value='&quot;THỊT VÀ SẢN PHẨM CHẾ BIẾN&quot;' />
          <member alias='THỦY SẢN' value='&quot;THỦY SẢN VÀ SẢN PHẨM CHẾ BIẾN&quot;' />
          <member alias='TRỨNG' value='&quot;TRỨNG VÀ SẢN PHẨM CHẾ BIẾN&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='Sheet1 (data)' inline='true' name='federated.10px2bl1v4xh081h5i0zd1ll4jw2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='excel-direct.03see800uyou7a13f7t3b0oehlrd'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/vu389/OneDrive/Máy tính/data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.03see800uyou7a13f7t3b0oehlrd' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:Q163:no:A1:Q163:0' header='yes' outcome='2'>
            <column datatype='string' name='TÊN THỨC ĂN' ordinal='0' />
            <column datatype='integer' name='Calories (kcal)' ordinal='1' />
            <column datatype='real' name='Protein (g)' ordinal='2' />
            <column datatype='real' name='Fat (g)' ordinal='3' />
            <column datatype='real' name='Carbonhydrates (g)' ordinal='4' />
            <column datatype='real' name='Chất xơ (g)' ordinal='5' />
            <column datatype='integer' name='Cholesterol (mg)' ordinal='6' />
            <column datatype='integer' name='Canxi (mg)' ordinal='7' />
            <column datatype='real' name='Photpho (mg)' ordinal='8' />
            <column datatype='real' name='Sắt (mg)' ordinal='9' />
            <column datatype='integer' name='Natri (mg)' ordinal='10' />
            <column datatype='integer' name='Kali (mg)' ordinal='11' />
            <column datatype='integer' name='Beta Caroten (mcg)' ordinal='12' />
            <column datatype='real' name='Vitamin A (mcg)' ordinal='13' />
            <column datatype='real' name='Vitamin B1 (mg)' ordinal='14' />
            <column datatype='real' name='Vitamin C (mg)' ordinal='15' />
            <column datatype='string' name='Loại' ordinal='16' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.03see800uyou7a13f7t3b0oehlrd' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:Q163:no:A1:Q163:0' header='yes' outcome='2'>
            <column datatype='string' name='TÊN THỨC ĂN' ordinal='0' />
            <column datatype='integer' name='Calories (kcal)' ordinal='1' />
            <column datatype='real' name='Protein (g)' ordinal='2' />
            <column datatype='real' name='Fat (g)' ordinal='3' />
            <column datatype='real' name='Carbonhydrates (g)' ordinal='4' />
            <column datatype='real' name='Chất xơ (g)' ordinal='5' />
            <column datatype='integer' name='Cholesterol (mg)' ordinal='6' />
            <column datatype='integer' name='Canxi (mg)' ordinal='7' />
            <column datatype='real' name='Photpho (mg)' ordinal='8' />
            <column datatype='real' name='Sắt (mg)' ordinal='9' />
            <column datatype='integer' name='Natri (mg)' ordinal='10' />
            <column datatype='integer' name='Kali (mg)' ordinal='11' />
            <column datatype='integer' name='Beta Caroten (mcg)' ordinal='12' />
            <column datatype='real' name='Vitamin A (mcg)' ordinal='13' />
            <column datatype='real' name='Vitamin B1 (mg)' ordinal='14' />
            <column datatype='real' name='Vitamin C (mg)' ordinal='15' />
            <column datatype='string' name='Loại' ordinal='16' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Q163:no:A1:Q163:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TÊN THỨC ĂN</remote-name>
            <remote-type>130</remote-type>
            <local-name>[TÊN THỨC ĂN]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TÊN THỨC ĂN</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_125B1B911951448B973742A11536E34B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Calories (kcal)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Calories (kcal)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Calories (kcal)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_125B1B911951448B973742A11536E34B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Protein (g)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Protein (g)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Protein (g)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_125B1B911951448B973742A11536E34B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fat (g)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fat (g)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Fat (g)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_125B1B911951448B973742A11536E34B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Carbonhydrates (g)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Carbonhydrates (g)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Carbonhydrates (g)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_125B1B911951448B973742A11536E34B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Chất xơ (g)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Chất xơ (g)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Chất xơ (g)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_125B1B911951448B973742A11536E34B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cholesterol (mg)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cholesterol (mg)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Cholesterol (mg)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_125B1B911951448B973742A11536E34B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Canxi (mg)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Canxi (mg)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Canxi (mg)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_125B1B911951448B973742A11536E34B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Photpho (mg)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Photpho (mg)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Photpho (mg)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_125B1B911951448B973742A11536E34B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sắt (mg)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sắt (mg)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Sắt (mg)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_125B1B911951448B973742A11536E34B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Natri (mg)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Natri (mg)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Natri (mg)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_125B1B911951448B973742A11536E34B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Kali (mg)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Kali (mg)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Kali (mg)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_125B1B911951448B973742A11536E34B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Beta Caroten (mcg)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Beta Caroten (mcg)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Beta Caroten (mcg)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_125B1B911951448B973742A11536E34B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vitamin A (mcg)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Vitamin A (mcg)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Vitamin A (mcg)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_125B1B911951448B973742A11536E34B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vitamin B1 (mg)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Vitamin B1 (mg)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Vitamin B1 (mg)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_125B1B911951448B973742A11536E34B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vitamin C (mg)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Vitamin C (mg)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Vitamin C (mg)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_125B1B911951448B973742A11536E34B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Loại</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Loại]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Loại</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_125B1B911951448B973742A11536E34B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Beta Caroten (mcg)]' role='measure' type='quantitative' />
      <column datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Loại]) / TOTAL(COUNT([Loại]))'>
          <table-calc ordering-type='Columns' />
        </calculation>
      </column>
      <column datatype='integer' name='[Calories (kcal)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Canxi (mg)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Carbonhydrates (g)]' role='measure' type='quantitative' />
      <column datatype='string' name='[Loại]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;ĐỒ NGỌT (ĐƯỜNG, BÁNH, MỨT, KẸO)&quot;' value='ĐỒ NGỌT' />
          <alias key='&quot;GIA VỊ, NƯỚC CHẤM&quot;' value='GIA VỊ' />
          <alias key='&quot;Hạt, quả giàu protein, chất béo và chế phẩm&quot;' value='HẠT' />
          <alias key='&quot;Khoai củ và các sản phẩm chế biến từ chúng&quot;' value='KHOAI CỦ' />
          <alias key='&quot;Ngũ cốc và sản phẩm chế biến từ chúng&quot;' value='NGŨ CỐC' />
          <alias key='&quot;SỮA VÀ SẢN PHẨM CHẾ BIẾN&quot;' value='SỮA' />
          <alias key='&quot;THỊT VÀ SẢN PHẨM CHẾ BIẾN&quot;' value='THỊT' />
          <alias key='&quot;THỦY SẢN VÀ SẢN PHẨM CHẾ BIẾN&quot;' value='THỦY SẢN' />
          <alias key='&quot;TRỨNG VÀ SẢN PHẨM CHẾ BIẾN&quot;' value='TRỨNG' />
        </aliases>
      </column>
      <column datatype='real' name='[Protein (g)]' role='measure' type='quantitative' />
      <column caption='Tên Thức Ăn' datatype='string' name='[TÊN THỨC ĂN]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_125B1B911951448B973742A11536E34B]' role='measure' type='quantitative' />
      <column-instance column='[Beta Caroten (mcg)]' derivation='Attribute' name='[attr:Beta Caroten (mcg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calories (kcal)]' derivation='Attribute' name='[attr:Calories (kcal):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Canxi (mg)]' derivation='Attribute' name='[attr:Canxi (mg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Carbonhydrates (g)]' derivation='Attribute' name='[attr:Carbonhydrates (g):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Loại]' derivation='Attribute' name='[attr:Loại:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calories (kcal)]' derivation='Avg' name='[avg:Calories (kcal):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Beta Caroten (mcg)]' derivation='Median' name='[med:Beta Caroten (mcg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calories (kcal)]' derivation='Median' name='[med:Calories (kcal):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Protein (g)]' derivation='Median' name='[med:Protein (g):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calories (kcal)]' derivation='Min' name='[min:Calories (kcal):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Beta Caroten (mcg)]' derivation='None' name='[none:Beta Caroten (mcg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calories (kcal)]' derivation='None' name='[none:Calories (kcal):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Canxi (mg)]' derivation='None' name='[none:Canxi (mg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Carbonhydrates (g)]' derivation='None' name='[none:Carbonhydrates (g):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Loại]' derivation='None' name='[none:Loại:nk]' pivot='key' type='nominal' />
      <column-instance column='[Beta Caroten (mcg)]' derivation='Sum' name='[sum:Beta Caroten (mcg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calories (kcal)]' derivation='Sum' name='[sum:Calories (kcal):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Canxi (mg)]' derivation='Sum' name='[sum:Canxi (mg):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Carbonhydrates (g)]' derivation='Sum' name='[sum:Carbonhydrates (g):qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Loại:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;THỊT VÀ SẢN PHẨM CHẾ BIẾN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ĐỒ HỘP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Khoai củ và các sản phẩm chế biến từ chúng&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;THỦY SẢN VÀ SẢN PHẨM CHẾ BIẾN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ngũ cốc và sản phẩm chế biến từ chúng&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ĐỒ NGỌT (ĐƯỜNG, BÁNH, MỨT, KẸO)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NƯỚC GIẢI KHÁT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TRỨNG VÀ SẢN PHẨM CHẾ BIẾN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SỮA VÀ SẢN PHẨM CHẾ BIẾN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GIA VỊ, NƯỚC CHẤM&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hạt, quả giàu protein, chất béo và chế phẩm&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[attr:Calories (kcal):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[attr:Canxi (mg):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[avg:Calories (kcal):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Calories (kcal):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[min:Calories (kcal):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[none:Calories (kcal):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[none:Canxi (mg):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[sum:Calories (kcal):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[sum:Canxi (mg):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.10px2bl1v4xh081h5i0zd1ll4jw2]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Protein (g):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[attr:Beta Caroten (mcg):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[none:Beta Caroten (mcg):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[sum:Beta Caroten (mcg):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[attr:Carbonhydrates (g):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Beta Caroten (mcg):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[none:Carbonhydrates (g):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[sum:Carbonhydrates (g):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:Loại:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;THỊT VÀ SẢN PHẨM CHẾ BIẾN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ĐỒ HỘP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Khoai củ và các sản phẩm chế biến từ chúng&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;THỦY SẢN VÀ SẢN PHẨM CHẾ BIẾN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ngũ cốc và sản phẩm chế biến từ chúng&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ĐỒ NGỌT (ĐƯỜNG, BÁNH, MỨT, KẸO)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NƯỚC GIẢI KHÁT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TRỨNG VÀ SẢN PHẨM CHẾ BIẾN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SỮA VÀ SẢN PHẨM CHẾ BIẾN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GIA VỊ, NƯỚC CHẤM&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hạt, quả giàu protein, chất béo và chế phẩm&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Viet Nam&quot;' />
      </semantic-values>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{ce6822d8-3472-4be6-b678-0642a3131c83}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[sum:Beta Caroten (mcg):qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields>
          <field name='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[AdhocCluster:1]' />
        </result-fields>
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_125B1B911951448B973742A11536E34B'>
            <properties context=''>
              <relation connection='excel-direct.03see800uyou7a13f7t3b0oehlrd' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:Q163:no:A1:Q163:0' header='yes' outcome='2'>
                  <column datatype='string' name='TÊN THỨC ĂN' ordinal='0' />
                  <column datatype='integer' name='Calories (kcal)' ordinal='1' />
                  <column datatype='real' name='Protein (g)' ordinal='2' />
                  <column datatype='real' name='Fat (g)' ordinal='3' />
                  <column datatype='real' name='Carbonhydrates (g)' ordinal='4' />
                  <column datatype='real' name='Chất xơ (g)' ordinal='5' />
                  <column datatype='integer' name='Cholesterol (mg)' ordinal='6' />
                  <column datatype='integer' name='Canxi (mg)' ordinal='7' />
                  <column datatype='real' name='Photpho (mg)' ordinal='8' />
                  <column datatype='real' name='Sắt (mg)' ordinal='9' />
                  <column datatype='integer' name='Natri (mg)' ordinal='10' />
                  <column datatype='integer' name='Kali (mg)' ordinal='11' />
                  <column datatype='integer' name='Beta Caroten (mcg)' ordinal='12' />
                  <column datatype='real' name='Vitamin A (mcg)' ordinal='13' />
                  <column datatype='real' name='Vitamin B1 (mg)' ordinal='14' />
                  <column datatype='real' name='Vitamin C (mg)' ordinal='15' />
                  <column datatype='string' name='Loại' ordinal='16' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions brushing-enabled='false'>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Trứng' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Loại' />
        <param name='target' value='Trứng' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Calo vs Fat'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;CALORIES VÀ FAT&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (data)' name='federated.10px2bl1v4xh081h5i0zd1ll4jw2' />
          </datasources>
          <datasource-dependencies datasource='federated.10px2bl1v4xh081h5i0zd1ll4jw2'>
            <column datatype='integer' name='[Calories (kcal)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Fat (g)]' role='measure' type='quantitative' />
            <column-instance column='[Calories (kcal)]' derivation='None' name='[none:Calories (kcal):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fat (g)]' derivation='None' name='[none:Fat (g):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline degree='3' enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='polynomial' />
          </pane>
        </panes>
        <rows>[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[none:Fat (g):qk]</rows>
        <cols>[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[none:Calories (kcal):qk]</cols>
      </table>
      <simple-id uuid='{CF84D0BD-2872-43B3-A1CC-B352AC5C3AFE}' />
    </worksheet>
    <worksheet name='HẠT'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt; THẾ MẠNH CỦA HẠT &gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (data)' name='federated.10px2bl1v4xh081h5i0zd1ll4jw2' />
          </datasources>
          <datasource-dependencies datasource='federated.10px2bl1v4xh081h5i0zd1ll4jw2'>
            <column datatype='real' name='[Chất xơ (g)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Loại]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ĐỒ NGỌT (ĐƯỜNG, BÁNH, MỨT, KẸO)&quot;' value='ĐỒ NGỌT' />
                <alias key='&quot;GIA VỊ, NƯỚC CHẤM&quot;' value='GIA VỊ' />
                <alias key='&quot;Hạt, quả giàu protein, chất béo và chế phẩm&quot;' value='HẠT' />
                <alias key='&quot;Khoai củ và các sản phẩm chế biến từ chúng&quot;' value='KHOAI CỦ' />
                <alias key='&quot;Ngũ cốc và sản phẩm chế biến từ chúng&quot;' value='NGŨ CỐC' />
                <alias key='&quot;SỮA VÀ SẢN PHẨM CHẾ BIẾN&quot;' value='SỮA' />
                <alias key='&quot;THỊT VÀ SẢN PHẨM CHẾ BIẾN&quot;' value='THỊT' />
                <alias key='&quot;THỦY SẢN VÀ SẢN PHẨM CHẾ BIẾN&quot;' value='THỦY SẢN' />
                <alias key='&quot;TRỨNG VÀ SẢN PHẨM CHẾ BIẾN&quot;' value='TRỨNG' />
              </aliases>
            </column>
            <column datatype='real' name='[Photpho (mg)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Protein (g)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sắt (mg)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Vitamin B1 (mg)]' role='measure' type='quantitative' />
            <column-instance column='[Chất xơ (g)]' derivation='Median' name='[med:Chất xơ (g):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Photpho (mg)]' derivation='Median' name='[med:Photpho (mg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Protein (g)]' derivation='Median' name='[med:Protein (g):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sắt (mg)]' derivation='Median' name='[med:Sắt (mg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Vitamin B1 (mg)]' derivation='Median' name='[med:Vitamin B1 (mg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Loại]' derivation='None' name='[none:Loại:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Chất xơ (g):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Chất xơ (g):qk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Photpho (mg):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Photpho (mg):qk]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Protein (g):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Protein (g):qk]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Sắt (mg):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Sắt (mg):qk]' />
            </encodings>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Vitamin B1 (mg):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Vitamin B1 (mg):qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[none:Loại:nk]</rows>
        <cols>([federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Chất xơ (g):qk] + ([federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Photpho (mg):qk] + ([federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Protein (g):qk] + ([federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Sắt (mg):qk] + [federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Vitamin B1 (mg):qk]))))</cols>
      </table>
      <simple-id uuid='{9FB41FC1-045D-49A8-B31D-7F996EBB4987}' />
    </worksheet>
    <worksheet name='Percent each type of Food'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (data)' name='federated.10px2bl1v4xh081h5i0zd1ll4jw2' />
          </datasources>
          <datasource-dependencies datasource='federated.10px2bl1v4xh081h5i0zd1ll4jw2'>
            <column datatype='string' name='[Loại]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ĐỒ NGỌT (ĐƯỜNG, BÁNH, MỨT, KẸO)&quot;' value='ĐỒ NGỌT' />
                <alias key='&quot;GIA VỊ, NƯỚC CHẤM&quot;' value='GIA VỊ' />
                <alias key='&quot;Hạt, quả giàu protein, chất béo và chế phẩm&quot;' value='HẠT' />
                <alias key='&quot;Khoai củ và các sản phẩm chế biến từ chúng&quot;' value='KHOAI CỦ' />
                <alias key='&quot;Ngũ cốc và sản phẩm chế biến từ chúng&quot;' value='NGŨ CỐC' />
                <alias key='&quot;SỮA VÀ SẢN PHẨM CHẾ BIẾN&quot;' value='SỮA' />
                <alias key='&quot;THỊT VÀ SẢN PHẨM CHẾ BIẾN&quot;' value='THỊT' />
                <alias key='&quot;THỦY SẢN VÀ SẢN PHẨM CHẾ BIẾN&quot;' value='THỦY SẢN' />
                <alias key='&quot;TRỨNG VÀ SẢN PHẨM CHẾ BIẾN&quot;' value='TRỨNG' />
              </aliases>
            </column>
            <column-instance column='[Loại]' derivation='None' name='[none:Loại:nk]' pivot='key' type='nominal' />
            <column-instance column='[Loại]' derivation='Count' name='[pcto:cnt:Loại:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[none:Loại:nk]' />
              <size column='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[pcto:cnt:Loại:qk]' />
              <text column='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[pcto:cnt:Loại:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='auto' />
                <format attr='text-orientation' value='0' />
                <format attr='wrap' value='auto' />
                <format attr='vertical-align' value='auto' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='11' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='size' value='1.6591712236404419' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{BFB29014-359D-4775-B96F-0FF70B9E9FEA}' />
    </worksheet>
    <worksheet name='SỮA'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;THẾ MẠNH CỦA SỮA&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (data)' name='federated.10px2bl1v4xh081h5i0zd1ll4jw2' />
          </datasources>
          <datasource-dependencies datasource='federated.10px2bl1v4xh081h5i0zd1ll4jw2'>
            <column datatype='integer' name='[Canxi (mg)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Loại]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ĐỒ NGỌT (ĐƯỜNG, BÁNH, MỨT, KẸO)&quot;' value='ĐỒ NGỌT' />
                <alias key='&quot;GIA VỊ, NƯỚC CHẤM&quot;' value='GIA VỊ' />
                <alias key='&quot;Hạt, quả giàu protein, chất béo và chế phẩm&quot;' value='HẠT' />
                <alias key='&quot;Khoai củ và các sản phẩm chế biến từ chúng&quot;' value='KHOAI CỦ' />
                <alias key='&quot;Ngũ cốc và sản phẩm chế biến từ chúng&quot;' value='NGŨ CỐC' />
                <alias key='&quot;SỮA VÀ SẢN PHẨM CHẾ BIẾN&quot;' value='SỮA' />
                <alias key='&quot;THỊT VÀ SẢN PHẨM CHẾ BIẾN&quot;' value='THỊT' />
                <alias key='&quot;THỦY SẢN VÀ SẢN PHẨM CHẾ BIẾN&quot;' value='THỦY SẢN' />
                <alias key='&quot;TRỨNG VÀ SẢN PHẨM CHẾ BIẾN&quot;' value='TRỨNG' />
              </aliases>
            </column>
            <column datatype='integer' name='[Natri (mg)]' role='measure' type='quantitative' />
            <column-instance column='[Canxi (mg)]' derivation='Median' name='[med:Canxi (mg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Natri (mg)]' derivation='Median' name='[med:Natri (mg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Loại]' derivation='None' name='[none:Loại:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Canxi (mg):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Canxi (mg):qk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Natri (mg):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Natri (mg):qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[none:Loại:nk]</rows>
        <cols>([federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Canxi (mg):qk] + [federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Natri (mg):qk])</cols>
      </table>
      <simple-id uuid='{DD210633-81B6-4B03-8574-2AFF56EEC674}' />
    </worksheet>
    <worksheet name='THỊT VS THỦY SẢN'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'><![CDATA[<PHÂN BỐ CALORIES CỦA CÁC LOẠI THỰC PHẨM>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (data)' name='federated.10px2bl1v4xh081h5i0zd1ll4jw2' />
          </datasources>
          <datasource-dependencies datasource='federated.10px2bl1v4xh081h5i0zd1ll4jw2'>
            <column datatype='integer' name='[Calories (kcal)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Loại]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ĐỒ NGỌT (ĐƯỜNG, BÁNH, MỨT, KẸO)&quot;' value='ĐỒ NGỌT' />
                <alias key='&quot;GIA VỊ, NƯỚC CHẤM&quot;' value='GIA VỊ' />
                <alias key='&quot;Hạt, quả giàu protein, chất béo và chế phẩm&quot;' value='HẠT' />
                <alias key='&quot;Khoai củ và các sản phẩm chế biến từ chúng&quot;' value='KHOAI CỦ' />
                <alias key='&quot;Ngũ cốc và sản phẩm chế biến từ chúng&quot;' value='NGŨ CỐC' />
                <alias key='&quot;SỮA VÀ SẢN PHẨM CHẾ BIẾN&quot;' value='SỮA' />
                <alias key='&quot;THỊT VÀ SẢN PHẨM CHẾ BIẾN&quot;' value='THỊT' />
                <alias key='&quot;THỦY SẢN VÀ SẢN PHẨM CHẾ BIẾN&quot;' value='THỦY SẢN' />
                <alias key='&quot;TRỨNG VÀ SẢN PHẨM CHẾ BIẾN&quot;' value='TRỨNG' />
              </aliases>
            </column>
            <column caption='Tên Thức Ăn' datatype='string' name='[TÊN THỨC ĂN]' role='dimension' type='nominal' />
            <column-instance column='[Loại]' derivation='None' name='[none:Loại:nk]' pivot='key' type='nominal' />
            <column-instance column='[TÊN THỨC ĂN]' derivation='None' name='[none:TÊN THỨC ĂN:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calories (kcal)]' derivation='Sum' name='[sum:Calories (kcal):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[none:TÊN THỨC ĂN:nk]' />
            </encodings>
            <reference-line axis-column='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[sum:Calories (kcal):qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[sum:Calories (kcal):qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[sum:Calories (kcal):qk]</rows>
        <cols>[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[none:Loại:nk]</cols>
      </table>
      <simple-id uuid='{78C71BF0-378F-4C49-9E7B-31F03D09F7D3}' />
    </worksheet>
    <worksheet name='Trứng'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;THẾ MẠNH CỦA TRỨNG&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (data)' name='federated.10px2bl1v4xh081h5i0zd1ll4jw2' />
          </datasources>
          <datasource-dependencies datasource='federated.10px2bl1v4xh081h5i0zd1ll4jw2'>
            <column datatype='integer' name='[Beta Caroten (mcg)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cholesterol (mg)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Fat (g)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Kali (mg)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Loại]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ĐỒ NGỌT (ĐƯỜNG, BÁNH, MỨT, KẸO)&quot;' value='ĐỒ NGỌT' />
                <alias key='&quot;GIA VỊ, NƯỚC CHẤM&quot;' value='GIA VỊ' />
                <alias key='&quot;Hạt, quả giàu protein, chất béo và chế phẩm&quot;' value='HẠT' />
                <alias key='&quot;Khoai củ và các sản phẩm chế biến từ chúng&quot;' value='KHOAI CỦ' />
                <alias key='&quot;Ngũ cốc và sản phẩm chế biến từ chúng&quot;' value='NGŨ CỐC' />
                <alias key='&quot;SỮA VÀ SẢN PHẨM CHẾ BIẾN&quot;' value='SỮA' />
                <alias key='&quot;THỊT VÀ SẢN PHẨM CHẾ BIẾN&quot;' value='THỊT' />
                <alias key='&quot;THỦY SẢN VÀ SẢN PHẨM CHẾ BIẾN&quot;' value='THỦY SẢN' />
                <alias key='&quot;TRỨNG VÀ SẢN PHẨM CHẾ BIẾN&quot;' value='TRỨNG' />
              </aliases>
            </column>
            <column datatype='real' name='[Vitamin A (mcg)]' role='measure' type='quantitative' />
            <column-instance column='[Beta Caroten (mcg)]' derivation='Median' name='[med:Beta Caroten (mcg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cholesterol (mg)]' derivation='Median' name='[med:Cholesterol (mg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fat (g)]' derivation='Median' name='[med:Fat (g):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Kali (mg)]' derivation='Median' name='[med:Kali (mg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Vitamin A (mcg)]' derivation='Median' name='[med:Vitamin A (mcg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Loại]' derivation='None' name='[none:Loại:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <slices>
            <column>[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='subtotal' scope='rows' value='#333333' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#ffffff' />
            <format attr='background-color' scope='rows' value='#ffffff' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' scope='cols' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Beta Caroten (mcg):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Beta Caroten (mcg):qk]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Cholesterol (mg):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Cholesterol (mg):qk]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Kali (mg):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Kali (mg):qk]' />
            </encodings>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Fat (g):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Fat (g):qk]' />
            </encodings>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Vitamin A (mcg):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Vitamin A (mcg):qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[none:Loại:nk]</rows>
        <cols>([federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Beta Caroten (mcg):qk] + ([federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Cholesterol (mg):qk] + ([federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Fat (g):qk] + ([federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Kali (mg):qk] + [federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Vitamin A (mcg):qk]))))</cols>
      </table>
      <simple-id uuid='{AA418DB4-24E1-42F2-9655-EA0405332C4B}' />
    </worksheet>
    <worksheet name='ĐỒ NGỌT'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;THẾ MẠNH CỦA ĐỒ NGỌT&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (data)' name='federated.10px2bl1v4xh081h5i0zd1ll4jw2' />
          </datasources>
          <datasource-dependencies datasource='federated.10px2bl1v4xh081h5i0zd1ll4jw2'>
            <column datatype='integer' name='[Calories (kcal)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Carbonhydrates (g)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Loại]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ĐỒ NGỌT (ĐƯỜNG, BÁNH, MỨT, KẸO)&quot;' value='ĐỒ NGỌT' />
                <alias key='&quot;GIA VỊ, NƯỚC CHẤM&quot;' value='GIA VỊ' />
                <alias key='&quot;Hạt, quả giàu protein, chất béo và chế phẩm&quot;' value='HẠT' />
                <alias key='&quot;Khoai củ và các sản phẩm chế biến từ chúng&quot;' value='KHOAI CỦ' />
                <alias key='&quot;Ngũ cốc và sản phẩm chế biến từ chúng&quot;' value='NGŨ CỐC' />
                <alias key='&quot;SỮA VÀ SẢN PHẨM CHẾ BIẾN&quot;' value='SỮA' />
                <alias key='&quot;THỊT VÀ SẢN PHẨM CHẾ BIẾN&quot;' value='THỊT' />
                <alias key='&quot;THỦY SẢN VÀ SẢN PHẨM CHẾ BIẾN&quot;' value='THỦY SẢN' />
                <alias key='&quot;TRỨNG VÀ SẢN PHẨM CHẾ BIẾN&quot;' value='TRỨNG' />
              </aliases>
            </column>
            <column-instance column='[Calories (kcal)]' derivation='Median' name='[med:Calories (kcal):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Carbonhydrates (g)]' derivation='Median' name='[med:Carbonhydrates (g):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Loại]' derivation='None' name='[none:Loại:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Calories (kcal):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Calories (kcal):qk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Carbonhydrates (g):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Carbonhydrates (g):qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[none:Loại:nk]</rows>
        <cols>([federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Calories (kcal):qk] + [federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Carbonhydrates (g):qk])</cols>
      </table>
      <simple-id uuid='{8EAAB3C4-17E4-4E5A-98F7-5C87955B22F0}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Percent each type of Food'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[none:Loại:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <floating-toolbar-visibility value='1' />
        <default-map-tool-selection tool='4' />
      </viewpoint>
      <simple-id uuid='{B2C75123-308A-42E4-9723-01CEDB308AF4}' />
    </window>
    <window class='worksheet' name='Trứng'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Beta Caroten (mcg):qk]' type='color' />
            <card pane-specification-id='4' param='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Cholesterol (mg):qk]' type='color' />
            <card pane-specification-id='6' param='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Fat (g):qk]' type='color' />
            <card pane-specification-id='5' param='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Kali (mg):qk]' type='color' />
            <card pane-specification-id='7' param='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Vitamin A (mcg):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Beta Caroten (mcg):qk]</field>
            <field>[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Cholesterol (mg):qk]</field>
            <field>[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Fat (g):qk]</field>
            <field>[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Kali (mg):qk]</field>
            <field>[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Vitamin A (mcg):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D4FC7BFF-3B57-48E9-B920-3E1FFD6BBD46}' />
    </window>
    <window class='worksheet' name='ĐỒ NGỌT'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Calories (kcal):qk]' type='color' />
            <card pane-specification-id='2' param='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Carbonhydrates (g):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Calories (kcal):qk]</field>
            <field>[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Carbonhydrates (g):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F0CC61B6-A023-4E69-892E-822286B29DF5}' />
    </window>
    <window class='worksheet' name='SỮA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Canxi (mg):qk]' type='color' />
            <card pane-specification-id='2' param='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Natri (mg):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Canxi (mg):qk]</field>
            <field>[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Natri (mg):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5ABF7FFB-CDDD-4994-8A73-BB4621E518B8}' />
    </window>
    <window class='worksheet' name='HẠT'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Chất xơ (g):qk]' type='color' />
            <card pane-specification-id='3' param='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Photpho (mg):qk]' type='color' />
            <card pane-specification-id='4' param='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Protein (g):qk]' type='color' />
            <card pane-specification-id='5' param='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Sắt (mg):qk]' type='color' />
            <card pane-specification-id='6' param='[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Vitamin B1 (mg):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Chất xơ (g):qk]</field>
            <field>[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Photpho (mg):qk]</field>
            <field>[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Protein (g):qk]</field>
            <field>[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Sắt (mg):qk]</field>
            <field>[federated.10px2bl1v4xh081h5i0zd1ll4jw2].[med:Vitamin B1 (mg):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0CE147DA-1348-4EC5-B7C7-4AF675982529}' />
    </window>
    <window class='worksheet' name='THỊT VS THỦY SẢN'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='199'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='true' QUART3='true' SKEWNESS='false' STDEV='true' SUM='true' type='summary' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{247D8237-3C62-4855-8DC2-3600CA5D854F}' />
    </window>
    <window class='worksheet' maximized='true' name='Calo vs Fat'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{65F420FB-2B08-44D4-BB9F-02C903D48EAD}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Calo vs Fat' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2deXRc53mfn9n3fbDvBEAAxEKC4k5RsjZHlhRHlhw7spzEid2mcbbTHidt
      2p625+SkSd2m5+Q0dnMaN3VsSV5iS7Iki1pMUQsp7itAgiD2bYAZDGZf79ylf0AERZrihgHJ
      Ie7zF5aZ935z5/6+5f3e9/00iqIoqKisUrS3uwEqKrcTVQAqq5pbKgBRFItmKxqNFs3W5ciy
      jCRJK2YfoFAoqPZvo31RFFEU5dYKoJjLDb1eXzRbV2Kll0aq/TvDvjoFUlnVqAJQWdWUrABk
      Wb7dTVC5C1AFoLKqWbYAYsEpzg2PU5AVZseHmApGUWSRyZFB5iKpYrTximi1JatdlTuIZT1F
      hWSIgak45X43cnySibiW2eFB5uYmiIsmpgfPkFuhjloVgEoxWJYvMRlPkk2GOHM2S6vPSFXz
      emxTaQKZHBU1HcjaBMk86A2LPldJkorm3ioUCgiCUBRbl6MoCoqirOg0S5KkFWu/av/ayLKM
      oijLE4DNbsNb1YhTSZHTaQiNT6JLZKls8LEQnCO3kKWjGfTai5cxGAzLbvwFO0ajsSi2LkeW
      ZWRZXtG9BkEQVqz9qv1rUygU0Ov1y5sCmdwVVNtkcnoXdc1dVJlT+Jpaqa5qxFyIUNm6DssK
      zVRWeqdWZXWguZXRoIVCoWgjQDQaxePxFMXW5agjwN1vvygjwO1Ep9Pd7iao3AWUrAA0Gs3t
      boLKXUDJCkBFpRioAlBZ1ZSsAIqZW6CyeilZAaioFIOSFcBKJ8SorA5KVgAqKsVAFYDKqqZk
      BaCWM1IpBiUrADUWSKUYlKwA1J1glWJQsgJQY4FUikHJCkBFpRioAlBZ1ZSsANRFsEoxKFkB
      qG5QlWJQsgJQF8EqxaBkBaC6QVWKwTIFIBGYGGNkbBJBlAnPThGMJFAUibnpCRYSmeK0UkVl
      hViWAJR8jPFgCqvVgpKeYXA6yfCZM4SCk8xGcwz195FXp+oqdzDLiimWBZFUIsTEtAajW6G2
      oxvb1GkCqQzVTR3Is/0kcuBZgcJY+Xwek8lUFFuXoxbGuvvtF6Uwlqi1sHXbDkITZ8hgIRwI
      EYtn8dZ6SMSiZKJZWleoMJZOp1MLY6n2b5qilEUxms3MDPeTM5RTs2YdHnEGa80aaqubkBbG
      cDe2Y12hZbaaEKNSDEq2MFYymcThcBTF1uWoI8Ddb7/kC2OpqBSDkhWAuhOsUgxKVgBqLJBK
      MShZAag7wSrFoGQFoMYCqRSDkhWAikoxUAWgsqopWQGox6SqFANVACqrmpIVgHpMqkoxKNmn
      SBWASjFQnyKVVY0qAJVVTckKQA2FUCkGJSsANRhOpRiUrADUUAiVYlCyAlCD4VSKQckKQEWl
      GKgCUFnVLFsAiiIRjcZRFIX4QohoIoOiyETmgyTS+WK08Yqo5wSrFINlC2BhcpD3D/YhpOc4
      NTjD6ROnWJifYnhyjv6TpxBUZ43KHcyyqkKIuQQDY0GUTJp6v564rxPrVB+zBh0VlR1Is/0Y
      a3twf6wwVrFCGDKZDFartSi2LudCYayVDLeQJGlFPVmq/asjyzJarXZ5hbFioVnmAtOEA/O4
      dnYSCUZIJvO4qpykEgmy8RxNa0CvK35hrHw+rxbGUu3fNBfKoizrG/bXt/FI/Vrm5+bxVvjJ
      9x1HKqulrtrLwKlTWKqasaruepU7mJItjBWPx3G5XEWxdTnqCHD32y/5wlhqQoxKMShZAaj5
      ACrFoGSfIlUAKsVAfYpUVjWqAFRWNSUrADUhRqUYlKwA1IQYlWJQsgJQE2JUikHJCkBNiFEp
      BiUrABWVYqAKQGVVU7ICUBNiVIpByQpARaUYlKwA1HOCVYrBNZ+iQi7FyMgYssFGS3MjRl3J
      akZF5Ze4ytMsM3DkfV59Yw85jEjJIK++9CKnR+ZuXetUVFaYq44AjV1bae0ReH/POyQEBU/1
      GhorVyYJ5UZRd4JVisFVRgAtFouJbCJIwVjN1q5qTu87RjB9Z3hf1FgglWJwlRFAQZYVLM5y
      hIWDvDUt0b6xA7vxzghBUHeCVYrBVQQgc/rDvcxLdtbv/BSykGX0/DmmA2Gq3PUAKLJEMpkA
      nQmHzUI2lUDRm7GaDaSTSbQmK1ZTcXKAL0eNBVIpBlcRgI4N9z7EQmCcgeER0Jvp2vYQZe6L
      tXjEXJqpyUliiSRta5voPzuFrChs6Kzh3PAckgTbdm7BoHbWKnco16wKocgSkgw6LUgy6PWX
      9rzD/YcJJHWsKzeSKu/COnWaoFFPWUUH8mwfxvr1uPXFL4yVSqWw2+1FsXU5amGsu9/+dRbG
      Ehk69SFnp2FtowXJWEd3W+XFRgoZMNjRyTFEnYP58SEMWQVfvZXg2Dl0io4mw8oUxhJFUS2M
      pdq/aa6zMJYWf1UDDWRwed34yssu+a9GZ6SsoorymkYcNgvOj60BPNYEWpNtxQpjWSyWlTGs
      sqq4pgDMZg17fvwCjjXV9Nz3eba3XRSBVqfH5fYs/W51XNwjsDvdRW/sx1HdoCrF4JqTXEXW
      0NjagALkkplb0KTrQ90IUykGVx0B0tEoWmcVDz/5eTR6LQ6H81a165qoblCVYnDVEWDi+DGm
      E3EOvnsIo82Ghjun11U3wlSKwVVHAJvXxO6f/JRULMnMPwXZ9tBjdDb4b1XbVFRWnJKtDp1M
      JnE4HEWxdTmqG/Tut1/y1aHVlEiVYlCyAlBRKQYlKwA1JVKlGJSsAFRUioEqAJVVTckKQN0J
      VikGJSsANRZIBUCSZaLJLJlc4abeX7IrSXUnWCUniPzTGycJRtLIisIXH+yko6Hs2m/8GCU7
      AqixQCq/ODZKudvGn3/5Xr7+5GZ+9M6ZGx4JSnYEUFmdSJLM/v4p+sdCjAai/OanezDodXgd
      FnRaLVmhgNV8/dEGqgBU7njCsQw/fKefhXgGu9WI3WLiUxsaQYF/fvcsOq2WsdkoPqcFt818
      Q7ZLdgqkHpS9OsgXRP7htePs7K7j65/bzPmpBToa/KxrLOMLD3YST+fZ1zeJrCj8zmO96G6w
      dGfJjgCqAO5OFAXSOYGjA9P4XDbKPTYkWaZ7TQV6nZaWGi99I0G2d9YyGYzTVufjX/3appu+
      XskKQD0o++4kmszydy8dpqXazZmJMMaPqpCcmwhT7XdgMRmYDCX4q+f3YTLo+d3Hepd1vWUJ
      QJFFhs+eIq44WL+umfEzJyjYq2lv8DFw6hSm8jU01/pZCYelKoC7k/19k2xuq+ahjQ3o9Qb+
      6vl9PL6tlbePjhBN5tjaWctXH+8lmxexW4wYDcvzBi5LAGI+h7duLfrQOOGJc6RsTRjCo0wZ
      kpgr15KdOU+myo9N9ViqXCcGvY6csBjqvlhLSqba7+Bff2H7Ja+zFKni4LIEYDDbkBbGkQxe
      rEoUb7kXqzDDbF6kotKJNW0mK4DJcLEwVrFCGCRJQhCEoti6nAuFsVZynbGS7S9l+1vaK/n7
      V08wFYwRz+TpbPTjthuLfi1ZllEUZXkZYbnINIfOzVJbWU6lR8exgXkQ86xrr2JsKkYhn2fT
      9i0YP5oDFTMjLBqN4vF4rv3Cm0DNCCu+fUWBsdkoh85OU+mzs7Or/hOnL6Ikc2Z0Do/TRl25
      c0V2/a+zMNbV0dt9tDaAjA69vZz1bUZkox233YxWY0Jv8yw9/Cqrm9FAhOd/0cdDG9cwPhfl
      ubdP85VHN6DV/vIDotdp6Wjwr6iAl661rDcbLVTX1C79bvKVL/3sLau80luKhpoQU1q8c2Kc
      x7e1Uu130N7g51svHiaWyuF13t4Kf+pTpHJL8DrMPP+LPvxOK6mcgCwry/bgFAPVl6hyS9Bo
      NCiygkazuB4AVsQ9fqOU7AigJsSUFgvxLF/+dA+VXjsmo55vv3yEfEHCdptrHJfsCKAmxJQW
      n+pt4PWDw0zNJ3j76Cg1fidu+40Frq0EJTsCqAkxpUVLjY9nHu7i4JlpKr12dt1Xf0UP0K2m
      ZAWgJsSUFhoNtNR4aanx3u6mXELJCkDl5iiIEntPjHNuMszGtVXs6KpDu4pH05JdA6jcHD99
      f4BQNM2jW1o4NTzHeyfHb3kb8oJIPJVDkm5/SHvJjgBqPsDN0TcS5M++dC8umwmnzcR3XjvO
      A71NS/9fSjkcDdG5ppydXXXobzDJ5GqMBqK88Is+JFnB57Lw1cd6ixbYdjOU7AigCuDm8Dgs
      TAXj5AsSQ1MLVPsvrbD91tERBibCfKq3kcHJMG8eHi7atQVR4gd7+vnyIz38+bP30lzt4bUP
      zxfN/s1QsgJQ8wFuji893M1rB87z18/v48hggM/fv+6S/x86O8PT93ewrrGMp+/v4PBAoGjX
      LogSQkGiwmvDaNCxts7P9HyiaPZvhpKdAqkCuDmq/Q7+zRe2kxUK2MzGpemNLCvkBBG33czE
      XAyXzcTEXBynzbQYNqzRIMsKH/ZPsffEGE6rkS89sv6Sg9OvhcVooL7Cye6Dw6xrKuO1D88v
      JrffRtQDMq7AaguHzgkiz711mqlQnGxeJF+QsJoNRBJZ/C4rWzqqeWL7Wk6PBtl7YpxnH+lm
      JhTn5weH+dNndmI2Xv99ygsibx0dZWIuxrbOWu5ZW82VnFB3yDnBKncLigLZfIGTw3O47Wba
      6n3oPhpF3zoygs9p4ZmHu3npgwHeODRMJKnhv/zOp6jw2Ph/r5+gf3yevtEQ93bXU+Gx47EZ
      efPIKJFEFp/TglarQa/TXnOD0mTU86s71t6Kj3xdlOw8Qg2FuDGiySz/44cfMj4b4+2jo/xw
      Tz/ZfIE3D4/w5uERqvwOTg7NMh/N4HVYcFlNvPzBACaDjtZaH1OhOO31fo6cCxBNZhkJRMnk
      RfaeGOcvv/8B//W5fQxMhG/3x7xhSnYKpGaE3Zj9V/YPYtDraK/38+L7Zzk1HKSxyk13UzkG
      g45X9w/isptprfEhiBLheIZoMstXHt3Azw+e53cf66Xa5+Cto6N82D+F1aSnrd7PfDTNs5/u
      IZ0V+NZLR/jGMztwWk1Fb3+xKfkpkBoKcWPotFriqRzfee0YX/50D1OhBENTEf7oqS34XTZ0
      Wi0/2tOPVqPhG7+xg9FAlO+/eYr9/VM8+3APtWUuNBr4zNYWPrO1BUEQeHnfEOsay7BbjNgt
      RhxWI7FkrigCWEkkSSKVSrGwsFC6AlCD4W6Me3vq+B8/PEA2L/LyB4P0tlZx4MwU5ybC3Ntj
      BUXhqfs7kGSF//XTw3gcZv7Tb99Plf+THQ0bWiv58d4z1FW4CEXT5AsSFR7bLfxU18eFggyR
      SISZmRkmJydJJBJ4vd7SnQKpXqAbtx+KpfnP//gunY1l1JY7OTIwg6yw1Hv/iyfuwWK6vs8s
      CAIGg5GzE/O8fmAIj8PMrz/QictWnN5/ufdHFEUSiQShUIjp6WlCoRBms5ny8nIaGhrw+/2Y
      zebSHQFUbhyP3YzVZGBwcoGBiTAmg45/+6WdKAr43dYbDnnQaKCzsYzOxhuryb9S5PN5pqam
      CAaDBAIBCoUCZWVl1NXV0dvbi8vlWurUCoXFMurLEoCUS3H67FGMjh466uGdvUcRDXZ2bmzk
      yLGzYHZz385N6FdgtrIazglOpPPs758iFE1RV+5iR1fddfncJUlmPpbBYVcumY+fHZ+nvd7P
      155YLCf43Nt9jM3F2Lau9pNM3bHIskw6nSYajS718KlUCrfbTV1dHbt27aKiogK4+nR5WQLQ
      me1096xjbAyywQBrtj+MdbqP8YUo67Y8gBjoI54Hl15cavQF5S0XSZKKZutyLhTFWsnZ4bXa
      L0oyf/3CPkKRNNs7qxd98WMh/uUTveguSySJJHO88uEQ6azAgxsb+eD0JOFYmoIo89R9HXSv
      WeyhbSYd4XiavCCgQUM4lqa3ufym7uNK3v9Psp/P55mbmyMUChEIBMhms9jtdqqrq1m/fj1e
      rxeLxbL0wF+tk7xQpK1oUyCdUUc2nUXJy1jsWoR8HiEv49Rf9NgoilK0ebXJZFqxOfoFAayk
      p+la9+LsRJDJYJyvPLqBh+5pwqA38EHfJKFYlrpy59LrcoLI3//sGI9vX4vTZuLbLx9he2ct
      X31sPQUJvvmD/bTU+XBYjDTX+mmp9fHNHxxEo9HQXO2ho6n8pvIBivldXglBEJY8NbOzs4RC
      IXK5HG63m4qKCnbu3InP50Ov19+0Q0Sn0y1PAIVMjKPH+0ikDXh29CL0Hydtr2RjRSUnTxzD
      4G3AoQfNx/L/i+m9WSlP0IWef6U9TVez77SZkGWFhUQGWVGIJLPotBosJsMl75sKJfA4LWxq
      rwagvd6PXqdFq9FgNesxGfTk8uLSVOjp+zuY76lHVqDCY1tWWmIx748oikSjUebn55mfnycQ
      WAzC83q9lJWVsXPnTpxO5yU9/HLRaDTLrA1qdbP93oeWfvdv37X086aP/axy4zRWunlix1p+
      fmCIfX1TJDN5fvPT6/G7Li2j4HdbWYhnCcczmAw6MvkCxwZnqfbZmY2kmYuk+N8/O4pOq+GJ
      HWtZ31xBhdd+mz7VIqIoks1micfjBAIBwuEw8XgcvV6Pz+ejqqqKdevW4fF40Ol0K9oRlawb
      NJFI4HQ6r/3Cm+BOcYPKisLcQop4Oo/PZaHMZb3iw3BsMMCrH55HUWBTWxVt9X72n55Aq9My
      NB3h609uRlYU/s8rx/iTX9+Kz3n9EZzLaf8F8vk8iUSCYDBIKBQiGo0iCAJOpxO/3095eTke
      jwen07kU5XuzblBFUQiEk6SyAs013k/0bJX8TvBqiAXSajRU+x2/lLRygZwgcmJolmxe5A+f
      2oLdYsRkWOwxGyscHBsKotfplt6/psbDWCBWFAFcCVmWEQSBbDbL/Pw84XCYcDhMKpXCbDbj
      8/moqKigq6sLt9uNXq8vali7oii8+uF5To8EcdlM5D48z+//2ibslk8WUskK4G7bCY4ks8xH
      09RXuK4rRbAgSnz75SMIBYnmGi9//7Oj/PHTWy9xk7bU+Nh9aJiJuRiyojA8HeHJne1Fa7Mo
      iqTTaSKRCJFIhLm5ORKJBDqdDo/Hg8/no7e3F6fTicPhWPEcjlAszYmhOf7Db+5Cp9Xw4vsD
      HOif4pHNzZ/4npIVwN0SC6QoCseH5nhl3yB+t5VwPPNRfM5iLy0rCplcAb1Wi8m42LvnBJFv
      v3yEkZko1X4HWo2Gtno/xwYDPLDxYn6v32Xhiw908oM9/Wg0Gp59pAeX/cZ3amVZRpIkMpkM
      8Xh8aSqTTqcBlqYyPT09eDyeJQ/dre6kCqKMUa9bWtjbzMalwzY+iZIVwN2CKMm8tn+QP3xq
      M2VuG8fPz/LT9wb4vc/eQ0GUePH9gaUw4yd3tbOhpZLj52cRChI1ZQ6+8cUd/Pcf7ken1VJX
      1niJbY1GQ2dTOZ1N5Ve48lXadFnPPj8/TzKZRFEU7HY7Ho+H5uZmKisrL5m3326qfQ7KPTb+
      789P4HNa6B8N8Qef23zV96gCuAUoCkSSGfpGQlT57bTW+Jb+JysKsqJgMug5Oz7Pz/YNEoym
      GJwME03liKXydDaVcfDMDN9+6Qh/8bUHSWUFosksM/NJ/uJ77xNJZGmu8bCh9cZK0suyjCiK
      ZDIZQqEQ4XCYRCJBPB5Ho9Es9ezt7e34fL6lnl2r1a54LNPNoNVq+K1f6eHUcJB4OseffH4r
      zmucG1yyXqBYLIbb7S6KrcspthdoKhTnO6+doHtNOZPBOC21Xn5lcxMmoxFFUXj94BADE2HO
      TsxjMRr44oOdvHVkhKYqDzPzCWrLnfzqjrX87T8fwu+2YrcY2X1wGKNBS74g0Vzt4b/+y4cw
      6C9OCy9/QBVFWfLGxGIx5ufniUajvzRn9/l8eL1eHA7HVacwd1JK581Q8l6gO6U6tCwrCKKE
      Qaf9xEOa3zw8wq/d28bGtVVkcgW++YP93NtVg1arQ1YUfmVLC4IokRNEfvvR9dSWuRgNRDk/
      vcDgxAJep4W+0RA6nZZQLE3/WIg/eGozsqwwPZ/g5PDc0sN/YRdbEASSySShUIiFhQUikQip
      VAqDwYDD4aCqqoq6urqlObvBYLjrHAuweD9ESV46j+Dyz1iyArgTFsGZXIHvvnGS2YUULptp
      qfz35Rj0OrL5AkfOzXB6JEQ6K3BqJMj7p6eRZJlNbdVs6ajh9EgIvU5LIJzg9EgQrVaDz2Xh
      3RPjnBmf53O72jkzPk8slSMviGzvqiOTEyjks0sbSuFwmEgkQjqdxuFwLO2kNjY24na7sdls
      d+WD/kmcn17gR3vOIEoy3WvKeXJX+yUjZclOge6EfIAXftGHz2lhV08Dg1Nh9h4f519/Ydsv
      PWDzsTR//fx+gtEURv2iXz6ZyfMff+s+zEY93919kl3rGyiIMrsPDpHI5AmEk9gsRmr8DvpG
      Q2g0sKu7js/f18ar75/ilXdPYNUVCIbCbGmvYmdPI36/H5/Ph9/vx2Qy4XA4VqyjuDBFiSZz
      /PCdfiKJLI9sWsPm9uqiCKwYU6BUVuCbL+zn65/bjMNi5Ad7+ulo8LOzu770p0B3AmOBKA/2
      NmE1G2ip8fKTdweQFQWdRoNQkAhGU7jsZsrci1lSNrMRt8NMhddOMpOnzG1DURSaqjy8fmCI
      hkoXdeUu3js1TjqbR8hleKy3HCWlsO/4ABWd8O4vRvGbLVQ49OQUKy3r6vjC0/eytbP+krYJ
      grDio2S+IPKtlw7z2LZWKr12nnv7NCajnvXNFSt63eslnsphMRmWRuWupnJGAhF2dl+8V6oA
      rgNZVhgJREhnC6xrKsOg06HRwNbOWl7ed44ndqzl0NkZRFnmmy98iMtuYiGeJRhNkS9IdDT4
      mYuk+PqTm1jXWMa3Xz5KKJbh2GCAUDTND37RRyKd5b0jSYRMkk1rXAyPDpEXBP7naB/V1VU0
      Nzbw4IMPYLNaGQummJJG+d3Hepf2BNbWl+Fx3NrjVhbiiwF6va2VaDQaPrWhkVPDc3eMAMrc
      NmRF4eCZaap8dvYcH+OpXZduBJasAG5VQowsK3z/rdMsxDM4bSZ2HxriD5/aisNq5KGNTWg1
      Gp576zR6nRabyUBbvY+XPzhHOldAlhU6GvycOD8HKHzvzVP4XVaGJoNsbyvjey++Td/gOPls
      kse3NDE8l+J8JEMg5aaxbT3Jgh6DQYffY+cPPreZ8rLFuP7JUIC2ej8uuxkXi190KJq+5QJw
      283kCxKTwThuh5kTQ7P0NK/s6aA3gtGg44+f3sqP957hg9OTfHbnWtobLs1eK1kB3Cpmwglm
      F5L86TM70Go0/OS9AY6cm+HBjU1oNBoe3NjEgxub+PHeMxh0Wl7Zf55cXqTMZSWSzBJNZXFb
      YGwigGSQICIxMTBBPuhm24Y2prw+FH0dX/j1xzgzEeUfd58iq9VQ5XGQnE+wpsrDn3x+K9X+
      i4F/XU3l/L/XT9DR4CeRzjMfS1NX4VrR+yDLCr84NsrRwQDrGsp45J4GbFYLX3l0A8+9dZpM
      XmRLRw2bPwrLvlNwWI189fHeT/x/yQqgGD56RVGIJnMoioLHablqYsiFnAYNcHokSCSRZUNr
      Jc3VXjQaaK728E+7T5JJp1hTYeXQyX6kfIqJTAKvy05BMdDU2kg4o+U//ekT7Dk+Ts5spGGN
      n9FAlL947uDStToayqivcPFHT23hubdPU+mzX1I+sK7cyW881MVP3xvAajLwh09twbrCJcbf
      ODxMIJzkK49u4MP+Kf75vUG+8pkNNFa5+fe/eTH0vdQ8TCUrgGLw2oEhjg0G0KChqcrNlnU1
      tNZ6Lzm+s8bvpNJn529/egin1cTeE2NsW1eL32Xl+bdO4TRpiMcWaCk3YkqOMjkwyuR5I5t6
      2hgK2rGXN6EzmrHo9Zi9XtbVmTCbDJR7bKxvriCdK7Czq469J8bR6TRU+ew8fX8HG9dWMTOf
      wGTQX5JQBIsPWVu9n7Z6/y27V8cGA/zeZzdR7rHx6c3N/PUL+y5pz80QS+X46XsDxFM5PrOt
      lfZ6/xXrhK4kq1YAU6FFX/ufP3sv333jFO+fnuDcZJgKr43f+9V70Os0yMpiNeTRQJRwPENP
      ow+vSUKTCfF/vreX6UAQj9PGI9s7OTyUYnPvZmrbt3BucgGtQU+dSWBtrZ8zYyGaqtz0jYYQ
      ZZmRmQg+p4W3jo7ytcd7WddYxufuW1ycJdJ5/teLh9lzbJRkVuDLj/Tc8ofiSjRVeTg5PMfO
      7vrF+7TM+j95QeTvXjzMI5vW4HfbeOHt03zp4W6ab/EZYiUrgOVuX4TjaQw67VKty87GMmYj
      KYZnovSPhXDajLy2f5ATZ0Z4akc9YX2S114/QFaQscjNbOzpJKnzozfbCMrlKNY8rx+fxWzQ
      kxNE6itMhOMiWq0Gu9VIOJHFYtKzvqWSs+Pz6LVaFpLZpRRH3UdPucdh4c+e2UkomsbrtFw1
      lv1W8uSudr7/5ik+ODWB12nliw90XPX1sVSOqVCchgo3zivUCppdSGE26tn6UUWKXT0NnBye
      w2Iy8NqB84iixGfvbafG71zRDqBkN8KutzaoJMvEU3lMRh028+LDlMzk+bsXjzARjBFL5TDo
      dRh1Wp59qIOX9p5kNjBDMBREIwmsqStHY7Txb7/yGd44PstYKEU0mSNfkCiIEh6HhZYaL/1j
      ISwmPZvbq3nn2DiCKCHLCuUeG1mhgEGvI5Mr0NVURlOVh/6xIMFIhrpyJ11ryrGY9LTUePE5
      rRwdDKDVaChIEs3VXiaCMVw2M5vaqjEaru3bzxdEDp2ZIpOX2NJRg8dhKcpDJMuLYQU6nQZJ
      FD9xo+rM+Dw/2tNPTZmT6fk4v/3ohl86HTKezvE3PzrAH320fvn+W6fpaPDz9tFRnr6vA0mW
      +Nn+83zjN3bgukZA281wYSOs5AQQiqb5+YEhhEKBx7a3UVt25R5ClhX29U3y7olxhmYiOKxG
      Wmu8bOusI57KkRNEjHoN33l5H5FwGCWfIJdNg1aP0erE4yvHZLHjdDox6nVU+UPjfLUAAAzC
      SURBVOyMzcVwWk3MLiR5clc7bx4eIZHOo9VqcFqNGAw6FFnB77YxNhsjm1ss62E06JBkGavZ
      gNmop9xtIxzP8Pj2tVT57Py35/dht5oQCiKVPgc2s4GCKBOMpEjnBO5b34jTZiQnSHztid6l
      suaKAhPBGG8eHsZsNPDEjlbcdjP/8OpxTHotZR47x87P8gef27yUX3AlFAWODwXY3zdFfbmL
      R7e2XLX+kFCQePPwEKOzcda3VDC7kGIhnuGhe5pory/jr577gC9/uof6ChfDMxFeev8cf/rM
      jl+y0zca4sX3zyLJChtaKqnxOzg7EeZ3PrMBQRD48bvnaKnxsq3z0rpF2bzIG4eGmJ5PsKba
      w2ggRpXPzuPbW6/7vLELAliRQO5sPMi7e/bw3oETSEWUVzZf4FsvHWZdo5/Oeg//8Noxoqns
      FV+75/go//j6CdK5Aj6nZTHx5HyAl985zitvf8DPd+/mhR/+GGFhHFHI0dDUwtZ7H6CiZSPe
      mrXU1dWjaI0k0nnmIimGpiN8akMDoiRjMuh5++goep2WGr+D2jInlT4HubxIJJnj3GQYo16L
      TqcBzeJ0rdJnR6fV8mfP7MTrtPDolmZ+dcda3jg0jN1q4vef3MSOrjpC0RSKAv/u2Z1UeO08
      urWFbL7Ab/3KeqLJLLPh1NJnDEVTfHf3Sbatq6O11su3XjzCaCBKPJ3nS4908fj2VrZ01HDg
      zPRV7+vxoQB7j4/z6JYWNBoN//TGKaRPOINNURR+tLefZEbgkU1r+NGefhbiGR6+Zw0vvjfA
      +ekwoiQvjVQmgw7xE9JXu5rK+PNnd/Hvv7yLz+1qp77CxXQoTjydI5kRmAzFqbksHVSSZL67
      +wQGvY76Cjc/3NNPjd+BzWLkO68dR7zBkydXZA2QjC3Qtvl+xEA/MQFcusVNK0EQyOfzlyRQ
      XIi7uTz7f6lw0cfcnaeG56hwW1lX5yKTMTA57+XU+QCb2yqQZRmtVrtk+4OT45S7LfQ0ONlz
      8AzpRIR4dIGmtgomFwRko5Pu9Z2cGo9h1WjIKApGATQaLXqthnRWQFYUFFmmrsxOJCXwUG89
      I9MLlDlNxFI5ZDTMR9NsX1fFg/c08fODoxi1Mv2TUdI5EVlRqC93YTXr2dxWyRuHRxiaDPLk
      jmb+cfcpFGAmnKSz3kN3g4epuSipbIH5WIpgOEo6KzAXSWM360kkU+QEESGfJZNZvCeHzkzQ
      3eSnqdyCVmvj2KCJidkI6WyeVCqNQa8jkc7htOjJZDLA4gaiRqO5JExi77ERHuptoNpjosxZ
      zd/86BAL0SRWk+6XvhtRkhkYD/P7T3QhKhosJh3RRIY6v4VtHRV8cGKUXd3V/MMrR+lqrqRv
      NMgD3dWkUqlLvvcL3+8F21kRXBYdPY0evvn8B8iKwvaOarx2Pel0GkmS0Gg0ZPISM/Nxnnmw
      nefe6ueh3jom5hb46mMbONA3QXAhhtNiuMQ2XCyQe+GzS5KEVqtdoUWwRoNUECkUFPTai5Gb
      BoMBrfbSU0Q+PgO70t8//reGKh9vHZtEVLRIaJleSLG5oxaz+eIcURRFkskkcmqO6bFx+g4l
      QGdCZ/FQ09JD15YO2uTFL2I0EMVlNxNJZDEZ9NRXuJmPZ1GAWDoHQKXXjtdpI1dQSOZEcoXF
      m/iNZ+7FaTPz0/fOMruQ5JUPFw+ZePbhLiKJHH/z44MEwklmI0kqvXZOjoSoLXfTWO2jqcbP
      Hz+9lYGpCJ/d2cZP3u3n7189yUw4ifWjRfFfPn8Ao8HAyEyEhgoX//MnR9jWWU9dlW9pv6Kx
      2sc7x8dBa0CQZBYSObqbq8iLCn/74nEcVhMGg57Hn+jF9NGU5sK8/eP3tanax0QoRVtDBdFE
      GpPJgMNmwaC/+MBeeL1BVhZDPZIFasptFESFcq8djVbPVDhNU42fXesbaKopY2Qmwu9+ppcK
      z2Itn2t9vwCP7VjHI1vbEQoF7FbzkgP4wut1BhmjQU8sXaCmws2+UxNs7awlkRXRarW47DbM
      Rt0VbX/8mqIoLgpkJdYAhWycY8dOYvDUsbFzzdKHKMYaYO+Jcd47OU6hILKju57PbG2lUBAI
      BoOMj48TDAYBsDs9HBpNMxTKoWj0mIx6bGYDa+t8fO2JjQB857XjnJ9aIJkRSGUF6itcbFxb
      RV4QsZoNxFI5ZuYTJDICiXQeALfdxFP3reP+DQ0ASzH5ALVlzqV81JwgMhmMMzYb443Dw9jM
      BrZ01PD49lZ0H8uokmWF3YeG2X1oCJvZwCObmmmsdKPRapAkmSqfnVA0jc1spMJ7aSizJMu8
      uv88J4fnAHhkUzM7u+tQFIXpUAxBVGisdH9insIFcoLId3efJBhJodNpeebhbpqrP9nBMB1K
      8L03T1IQZcwmA5lcAY0G1lR7+I0Hu65roX4trhYNOjwT4Qd7+hEKi44GrVaDQafliw910Vbn
      u+J7LqdkF8GKopDOCkxPT4NcYHx8nGg0isViob6+nvr6+qUqwJKskM4JKArotBoUBaxmw1Kt
      GFGSyXy0UBUlGZvZgMmoX5qWabRa0tkCBr2WgigjKwpGvQ6L6foTvhVFIZtfnA7ZzBeTTj7+
      BSuKQvqjh8hqurHElAvv1Wo0l7TrRsOJJVkmnS1gMuiWRourkc7kkBQNVrOBgihRkGTsZuOy
      Ks19nGu1Py8sHuZnMenJ5kWMBt0NHdZXcgJQFIVEIsHU1BSTk5PMzs5SV1dHQ0MDtbW12GzF
      O5jhTimMpdpfxSmRF1L74vE4U1NTTExMkE6nKSsro62tjU2bNlFWVlZysScqdxZ3nAAURSEe
      jzM2NsbExAT5fJ6qqiruueceKisrlxbUyWRSffhVls0dIQBZlslkMkxOTjI8PEwul6OmpobN
      mzcvpfepqKwEt00AiqKQTqeZmppibGyMWCxGeXk53d3d1NXVXXP+vRpOiFFZeW65AGRZJhgM
      Mjg4yNzcHC6Xi9bWVqqrq7FaL27XX2ttrijKipdGUe3f3fbhFgfDFbPXliRpxZK+L4hrJUv+
      rWT7VfvXRpbl5R+QcaMU0624kkf0XDgf7HYekaTaX1n7F3aC74hF8M2wkg/nrfAurXTJEtX+
      1bkwut/SKZCKyp3GnVHX+oZQSMUjLMSSFFu5QjZJIBAglsxSyKcJhsKIcnGuUshnSKSzgEIm
      GWM+kkBBIRVbIBJPLfuzyGKBaDwJQDYVIxAIkMwI5DNJgvORZdvPZ5LMzoUoSDK5dJzgQgwF
      hXQiSji6/O9CKuQIzs2Szovk0wkCgQDxdI5CLs1caAF5mf20VMgxNztLPJVFlkTmg0Gyglh6
      UyAxE6f/3BA6uYDcs40yW/E+wuzQABGThxqzjanBcyh6PZG0SEfT8mvdzIyfJ1yw07u2mr7+
      s+g1ErmGFqYmAmgUgXXrN+Oy3vxnCc9NMzgTZdfWjQwODGBz+zHZXJwfOIVBr5CU7qGl8maP
      RpKYmZxCKGQIZyRyc8MYtDJpoZPgxCh6TQGlYzNlzpsNXVAIz84QzRYYn41gJY3J5sFgdTF2
      5gQ6vZZYvpP2upsv/ZJNJYgnk5wfm6K53MpsGoSpUOmNANlcjqraZta21ZOOpK79hhsgk88T
      CwUpFPJo7GV0r2unkC/ONRpb2rCbDBQKWXwVTXT2NBMcnKOurYXW2irSucyy7JfXNlH2UdaX
      KCz2mqIkYXWX0bVxA7n54DKsa2lsXoNeb6Hco8PuaaBncwfz5wJUNjXStqaRTCq5zPY34DTp
      qaioQBYyzIXmEWUZg9VDd+8GCtH5Zdm3e7xk5gMYrS4yOQ1dPV24DEU8KPtWYdDpiCeT6LIJ
      9J7iluCraumk1Wbg0LEBrEYjqbSVYm+V6LQGUul5kiEBa4WdyEIKeyGOy1VVpCtINHdswqpP
      c2J4DoOSIrMwh2K9vjDhK6MwOjxCeeNa7EaZ6dFZknM6zJVO4tE0BkMavavp2mauQmhqDMVR
      RaPPStS8AZupwPFzMxjkNOlYCNm0vELImXSOrq07OXb0OFqbgVgyQ1oQS28EMDl9uDRJwgUn
      1d7ihkgo+QQHj/SztrOb5nofZ84HaF5Tf+03XhORvuPHmZ0eYzJSoMwqM5m00NbWjLMwT0bn
      xutYTuSjwuTgaWZnZzlxdpJ8MsTRMwHa2xtpqHTTP5GjvenaBQSu1v50PMbJIwcYnUtR6zdz
      LqSjq60eny7NfN5CpW95J09mMymGzxzn+MAEcjbC4VOjtK5tpLm+gtNDMdqay65t5CooQpLD
      Bw/iLK+jvrWV6bMnqWtpV71AKqubkhsBVFSKiSoAlVWNKgCVVY0qAJVVjSoAlVWNKgCVVY0q
      AJVVjSoAlVWNKgCVVY0qAJVVjSoAlVXN/wdvTk4XmDhFpAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='HẠT' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Percent each type of Food' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SỮA' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='THỊT VS THỦY SẢN' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Trứng' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='ĐỒ NGỌT' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
